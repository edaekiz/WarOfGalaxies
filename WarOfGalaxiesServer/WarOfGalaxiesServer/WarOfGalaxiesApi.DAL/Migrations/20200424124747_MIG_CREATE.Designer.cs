// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarOfGalaxiesApi.DAL.Models;

namespace WarOfGalaxiesApi.DAL.Migrations
{
    [DbContext(typeof(db_warofgalaxyContext))]
    [Migration("20200424124747_MIG_CREATE")]
    partial class MIG_CREATE
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblBuildings", b =>
                {
                    b.Property<int>("BuildingId")
                        .HasColumnName("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BuildingId");

                    b.ToTable("tbl_buildings");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblParameters", b =>
                {
                    b.Property<int>("ParameterId")
                        .HasColumnName("ParameterID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("ParameterBitValue")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ParameterDateTimeValue")
                        .HasColumnType("datetime");

                    b.Property<double?>("ParameterFloatValue")
                        .HasColumnType("float");

                    b.Property<int?>("ParameterIntValue")
                        .HasColumnType("int");

                    b.Property<bool>("ParameterSendToUserValue")
                        .HasColumnType("bit");

                    b.HasKey("ParameterId");

                    b.ToTable("tbl_parameters");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblResearches", b =>
                {
                    b.Property<int>("ResearchId")
                        .HasColumnName("ResearchID")
                        .HasColumnType("int");

                    b.Property<string>("ResearchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ResearchId");

                    b.ToTable("tbl_researches");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblUserPlanetBuildingUpgs", b =>
                {
                    b.Property<int>("UserPlanetBuildingUpgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserPlanetBuildingUpgID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime");

                    b.Property<int>("BuildingId")
                        .HasColumnName("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("BuildingLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UserPlanetId")
                        .HasColumnName("UserPlanetID")
                        .HasColumnType("int");

                    b.HasKey("UserPlanetBuildingUpgId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserPlanetId")
                        .IsUnique()
                        .HasName("IX_tbl_user_planet_building_upgs");

                    b.ToTable("tbl_user_planet_building_upgs");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblUserPlanetBuildings", b =>
                {
                    b.Property<int>("UserPlanetBuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserPlanetBuildingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnName("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("BuildingLevel")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UserPlanetId")
                        .HasColumnName("UserPlanetID")
                        .HasColumnType("int");

                    b.HasKey("UserPlanetBuildingId");

                    b.HasIndex("UserId")
                        .HasName("IX_tbl_user_planet_buildings");

                    b.HasIndex("UserPlanetId", "BuildingId")
                        .IsUnique()
                        .HasName("IX_tbl_planet_buildings");

                    b.ToTable("tbl_user_planet_buildings");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblUserPlanets", b =>
                {
                    b.Property<int>("UserPlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserPlanetID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Boron")
                        .HasColumnType("float");

                    b.Property<double>("Crystal")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double>("Metal")
                        .HasColumnType("float");

                    b.Property<string>("PlanetCordinate")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PlanetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<int>("PlanetType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserPlanetId");

                    b.HasIndex("PlanetCordinate")
                        .IsUnique()
                        .HasName("IX_tbl_user_planets");

                    b.ToTable("tbl_user_planets");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblUserResearchUpgs", b =>
                {
                    b.Property<int>("UserResearchUpgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserResearchUpgID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ResearchId")
                        .HasColumnName("ResearchID")
                        .HasColumnType("int");

                    b.Property<int>("ResearchTargetLevel")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserResearchUpgId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("UserId", "ResearchId");

                    b.ToTable("tbl_user_research_upgs");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblUserResearches", b =>
                {
                    b.Property<int>("UserResearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserResearchID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ResearchId")
                        .HasColumnName("ResearchID")
                        .HasColumnType("int");

                    b.Property<int>("ResearchLevel")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserResearchId");

                    b.HasIndex("UserId", "ResearchId");

                    b.ToTable("tbl_user_researches");
                });

            modelBuilder.Entity("WarOfGalaxiesApi.DAL.Models.TblUsers", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GoogleToken")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IosToken")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<string>("UserLanguage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("(N'en')")
                        .HasMaxLength(2);

                    b.Property<Guid>("UserToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("UserId");

                    b.ToTable("tbl_users");
                });
#pragma warning restore 612, 618
        }
    }
}
